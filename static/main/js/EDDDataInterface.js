// Compiled to JS on: Thu Jan 21 2016 17:27:10  
// This file is nothing but Typescript declarations, and doesn't technically need to be passed
// to client browsers.
;
/* tslint:enable:no-unused-variable */
//# sourceMappingURL=data:application/json;base64,