{"version":3,"sources":["webpack:///bundle.js?0b83********************","webpack:///webpack/bootstrap f738abc59421c1cbcac0?d720********************","webpack:///./typescript/src/AssayTableDataGraphing.ts?c9e2********************"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","EDDATDGraphing","Setup","graphDiv","$","clearAllSets","d3","selectAll","remove","addNewSet","newSet","barAssayObj","EDDGraphingTools","concatAssays","graphSet","create_x_axis","createXAxis","create_right_y_axis","createRightYAxis","create_y_axis","createLeftYAxis","x_axis","make_x_axis","y_axis","make_right_y_axis","individualData","assayMeasurements","color","scale","category10","width","height","createMultiLineGraph","createSvg","label","text","window","addEventListener"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,UAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,UAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,GEzCvB,GAAIQ,EAEJA,IAECC,MAAM,WAELD,EAAeE,SAAWC,EAAE,cAK7BC,aAAa,WAEZC,GAAGC,UAAU,OAAOC,UAIrBC,UAAU,SAASC,GAEZ,GAAIC,GAAeC,iBAAiBC,aAAaH,GAI7CI,GACAH,YAAaC,iBAAiBC,aAAaH,GAC3CK,cAAeH,iBAAiBI,YAChCC,oBAAqBL,iBAAiBM,iBACtCC,cAAeP,iBAAiBQ,gBAChCC,OAAQT,iBAAiBU,YACzBC,OAAQX,iBAAiBY,kBACzBC,eAAgBf,EAChBgB,kBAAmBf,EACnBgB,MAAOrB,GAAGsB,MAAMC,aAChBC,MAAO,IACPC,OAAQ,IAKlB,IAFMnB,iBAAiBoB,qBAAqBlB,EAAUF,iBAAiBqB,UAAU,gBAE5EvB,EAAOwB,MAEX,WADA9B,GAAE,UAAU+B,KAAK,6BAOpBC,OAAOC,iBAAiB,OAAQpC,EAAeC","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t/// <reference path=\"typescript-declarations.d.ts\" />\n\t/// <reference path=\"EDDGraphingTools.ts\" />\n\tvar EDDATDGraphing;\n\tEDDATDGraphing = {\n\t    Setup: function () {\n\t        EDDATDGraphing.graphDiv = $(\"#graphDiv\");\n\t    },\n\t    clearAllSets: function () {\n\t        d3.selectAll(\"svg\").remove();\n\t    },\n\t    addNewSet: function (newSet) {\n\t        var barAssayObj = EDDGraphingTools.concatAssays(newSet);\n\t        //data for graphs\n\t        //data for graphs\n\t        var graphSet = {\n\t            barAssayObj: EDDGraphingTools.concatAssays(newSet),\n\t            create_x_axis: EDDGraphingTools.createXAxis,\n\t            create_right_y_axis: EDDGraphingTools.createRightYAxis,\n\t            create_y_axis: EDDGraphingTools.createLeftYAxis,\n\t            x_axis: EDDGraphingTools.make_x_axis,\n\t            y_axis: EDDGraphingTools.make_right_y_axis,\n\t            individualData: newSet,\n\t            assayMeasurements: barAssayObj,\n\t            color: d3.scale.category10(),\n\t            width: 750,\n\t            height: 220\n\t        };\n\t        //create respective graphs\n\t        EDDGraphingTools.createMultiLineGraph(graphSet, EDDGraphingTools.createSvg('.linechart'));\n\t        if (!newSet.label) {\n\t            $('#debug').text('Failed to fetch series.');\n\t            return;\n\t        }\n\t    },\n\t};\n\twindow.addEventListener('load', EDDATDGraphing.Setup, false);\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f738abc59421c1cbcac0\n **/","/// <reference path=\"typescript-declarations.d.ts\" />\n/// <reference path=\"EDDGraphingTools.ts\" />\n\nvar EDDATDGraphing:any;\n\nEDDATDGraphing = {\n\n\tSetup:function() {\n\n\t\tEDDATDGraphing.graphDiv = $(\"#graphDiv\");\n\n\t},\n\n\n\tclearAllSets:function() {\n\n\t\td3.selectAll(\"svg\").remove();\n\t},\n\t\n\n\taddNewSet:function(newSet) {\n\n        var barAssayObj  = EDDGraphingTools.concatAssays(newSet);\n\n        //data for graphs\n        //data for graphs\n        var graphSet = {\n            barAssayObj: EDDGraphingTools.concatAssays(newSet),\n            create_x_axis: EDDGraphingTools.createXAxis,\n            create_right_y_axis: EDDGraphingTools.createRightYAxis,\n            create_y_axis: EDDGraphingTools.createLeftYAxis,\n            x_axis: EDDGraphingTools.make_x_axis,\n            y_axis: EDDGraphingTools.make_right_y_axis,\n            individualData: newSet,\n            assayMeasurements: barAssayObj,\n            color: d3.scale.category10(),\n            width: 750,\n            height: 220\n        };\n        //create respective graphs\n        EDDGraphingTools.createMultiLineGraph(graphSet, EDDGraphingTools.createSvg('.linechart'));\n\n\t\tif (!newSet.label) {\n\t\t\t$('#debug').text('Failed to fetch series.');\n\t\t\treturn;\n\t\t}\n\t},\n};\n\n\nwindow.addEventListener('load', EDDATDGraphing.Setup, false);\n\n\n\n/** WEBPACK FOOTER **\n ** ./typescript/src/AssayTableDataGraphing.ts\n **/"],"sourceRoot":""}