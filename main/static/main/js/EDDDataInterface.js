// Compiled to JS on: Thu Feb 18 2016 16:47:14  
// This file is nothing but Typescript declarations, and doesn't technically need to be passed
// to client browsers.
;
/* tslint:enable:no-unused-variable */
//# sourceMappingURL=data:application/json;base64,