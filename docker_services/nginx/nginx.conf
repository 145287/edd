worker_processes 4;

events { worker_connections 1024; }

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  upstream app_server {
    # linked by docker
    server appserver:8000 fail_timeout=0;
  }
  upstream rabbitmq {
    server rabbitmq:15672 fail_timeout=0;
  }
  upstream solr {
    server solr:8983 fail_timeout=0;
  }
  server {
    listen 80;
    client_max_body_size 4G;

    keepalive_timeout 5;

    root /var/www;

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri $uri/ @proxy_to_app;
    }

    location /flower {
      return 302 /flower/;
    }
    location /flower/ {
      rewrite ^/flower/(.*)$ /$1 break;
      proxy_pass http://flower:5555;
      proxy_set_header Host $host;
    }

    location /rabbitmq {
      return 302 /rabbitmq/;
    }
    location /rabbitmq/ {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # enable this if and only if you use HTTPS
      # proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://rabbitmq/;
    }

    location /solr {
      return 302 /solr/;
    }
    location /solr/ {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # enable this if and only if you use HTTPS
      # proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://solr/solr/;
    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # enable this if and only if you use HTTPS
      # proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }

    # error_page 500 502 503 504 /500.html;
    # location = /500.html {
    #   root /path/to/app/current/public;
    # }
  }
}
